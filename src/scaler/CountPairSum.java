package scaler;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class CountPairSum {

    public int solve(List<Integer> A, int B) {
        Map<Integer, Integer> map = new HashMap<>();
        int mod = 1000000007;
        int count = 0;
        for (int i = 0; i < A.size(); i++) {
            Integer elem = A.get(i);
            Integer target = B - elem;
            if (map.containsKey(target)) {
                count = count % mod + map.get(target);
            }
            map.put(elem, map.getOrDefault(elem, 0) + 1);
        }
        return count % mod;
    }

    public static void main(String[] args) {
        int[] ints = new int[]{237,729,21,756,495,788,203,312,106,629,71,989,160,541,37,607,394,288,49,922,434,757,749,562,983,721,172,52,837,332,427,187,954,282,330,36,226,195,903,466,53,779,163,10,436,323,659,640,439,54,832,945,929,341,191,687,874,308,114,336,100,138,326,935,367,309,259,146,942,980,727,826,128,843,867,502,135,594,516,272,436,518,475,174,729,599,462,954,533,352,613,451,124,787,309,602,37,506,1,438,714,687,884,152,771,349,448,152,451,756,146,494,178,889,67,569,545,979,720,532,473,424,419,500,124,910,689,979,530,546,298,360,214,996,780,189,831,81,592,832,616,712,44,986,295,430,23,595,481,282,783,732,869,425,430,595,477,555,361,91,488,252,976,689,363,980,177,424,555,935,782,918,924,430,218,757,901,165,687,475,850,515,499,738,873,101,294,745,933,514,861,289,791,456,115,904,463,214,499,553,255,872,463,987,161,359,20,686,356,574,355,609,547,486,730,982,309,226,841,852,102,324,518,276,725,47,801,749,36,962,144,193,636,227,180,797,230,602,771,845,994,426,180,261,996,571,262,881,282,259,657,958,47,136,595,455,60,911,44,825,842,169,858,279,88,504,246,382,283,383,630,26,113,951,713,632,13,107,230,354,351,437,293,758,81,998,972,799,762,770,787,146,863,377,784,571,117,648,852,518,993,190,429,638,864,351,554,993,87,429,10,953,116,42,589,125,122,38,57,398,250,671,382,626,261,380,563,477,626,690,727,987,166,503,88,743,327,538,256,416,649,801,138,398,97,232,498,169,900,777,18,91,545,655,14,33,635,282,553,381,432,550,101,247,164,747,304,431,671,246,233,549,979,199,703,122,359,514,522,620,774,638,800,310,473,32,402,557,681,297,996,988,22,532,704,849,691,417,828,398,223,245,783,225,237,704,624,164,845,973,527,613,705,61,762,799,745,468,874,832,447,187,59,809,60,196,599,225,705,938,812,634,623,662,689,514,847,171,237,44,515,851,816,637,675,927,320,631,369,499,486,113,46,279,374,516,810,727,459,88,648,724,464,133,959,842,672,955,586,88,39,58,593,594,494,946,694,906,651,429,937,915,63,72,917,837,118,222,832,788,138,364,271,897,961,846,807,847,602,193,157,31,780,463,600,317,584,822,609,776,946,241,954,94,259,29,396,77,90,446,831,379,94,479,870,280,278,77,360,159,761,997,929,761,6,290,638,921,78,280,21,800,197,555,835,939,300,569,987,96,50,268,886,133,134,745,342,81,543,539,449,209,4,216,900,972,700,979,902,408,152,553,864,267,404,660,388,242,690,75,323,653,686,48,141,457,139,768,949,5,252,383,451,349,724,1,416,618,471,842,437,352,582,935,892,63,191,435,613,715,907,139,779,540,927,290,245,855,171,582,45,235,662,585,676,236,88,313,156,163,382,792,772,788,641,52,672,286,975,336,959,895,513,154,35,990,412,963,340,743,520,850,974,387,580,945,190,29,943,38,840,77,585,468,908,57,408,687,397,247,627,108,441,549,267,342,500,10,757,90,68,569,881,204,678,381,358,656,968,560,340,18,125,554,32,174,284,633,283,953,841,547,603,269,35,653,777,513,940,504,634,999,797,886,911,205,919,1,844,476,314,741,748,84,938,73,755,886,133,882,203,728,798,536,136,133,77,176,764,163,845,120,36,627,69,413,216,36,512,856,55,280,989,109,841,581,479,779,259,445,789,103,999,654,819,928,529,779,264,188,515,722,814,66,961,948,654,310,326,17,977,161,254,953,287,286,762,843,60,526,455,186,406,613,478,394,201,115,790,696,715,635,430,136,856,743,163,156,543,650,120,476,258,444,193,984,394,938,855,248,42,332,383,109,215,382,355,133};
        CountPairSum countPairSum = new CountPairSum();
        countPairSum.solve(Arrays.stream(ints).boxed().collect(Collectors.toList()), 318);
    }

}
