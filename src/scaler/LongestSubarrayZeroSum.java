package scaler;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class LongestSubarrayZeroSum {

    public int solve(List<Integer> A) {
        Map<Long, Integer> map = new HashMap<>();
        long pf = 0L;
        map.put(0L, 0);
        long len = 0;
        for(int i=0; i<A.size(); i++) {
            pf = pf + A.get(i);
            if(map.containsKey(pf)) len = Math.max(len, i - map.get(pf));
            if(!map.containsKey(pf)) map.put(pf, i);
        }
        return (int) len;
    }

    public static void main(String[] args) {
        int[] ints = new int[]{704,-964,-290,297,-573,-347,614,-396,208,-613,-826,759,837,224,-668,717,-985,778,-339,-253,574,-378,-680,949,-842,-547,-311,846,467,435,511,-596,-482,-757,623,-1000,-225,-61,-251,-16,-851,533,-784,795,-796,-955,-762,-873,575,-485,-538,-534,-367,-712,941,247,-265,407,-126,107,605,-685,-522,-29,-246,901,661,535,-69,478,-169,803,857,-97,-187,-241,-286,378,-650,950,-912,-329,412,835,608,546,-451,-233,-400,-918,-257,189,-975,-695,-780,530,102,856,-247,-729,656,-237,815,336,217,-688,874,-62,-401,-354,5,806,-567,-257,525,998,12,-602,-632,1,-898,-131,-282,-251,609,-223,-200,-376,906,-418,899,302,251,1000,174,-496,336,-873,-669,-492,847,90,-417,-53,464,-342,-92,-327,-93,514,182,986,807,-584,-924,85,787,-423,406,-655,946,693,530,955,497,399,-136,-813,34,-297,43,-680,-174,-552,-559,-583,-938,460,-269,103,443,163,-144,40,767,701,208,24,61,-433,-701,757,638,801,-716,109,412,-436,73,-88,121,-377,-928,-511,566,710,-81,-17,360,-971,637,244,348,988,28,596,653,11,-597,597,-5,965,-452,-995,-510,-223,378,-658,559,806,241,-831,-388,-943,-885,9,-658,-202,817,504,989,-765,511,-12,-185,407,888,514,967,-814,-224,762,-937,-76,543,95,601,-319,449,-378,257,806,-602,-660,532,-595,-21,748,-614,-581,-742,781,-524,785,-103,-503,15};
        LongestSubarrayZeroSum longestSubarrayZeroSum = new LongestSubarrayZeroSum();
        longestSubarrayZeroSum.solve(Arrays.stream(ints).boxed().collect(Collectors.toList()));
    }
}
